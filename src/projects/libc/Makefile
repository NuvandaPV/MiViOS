#
# Makefile
#
# Created by Jean-Pierre Höhmann on 18-08-25.
#
# Copyright 2018 Jean-Pierre Höhmann (@NuvandaPV) <jean-pierre@höhmann.info>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# Make instructions for the libc.
#

DEFAULT_HOST?=i686-elf
HOST?=$(DEFAULT_HOST)
HOSTARCH!=target-triplet-to-arch.sh $(HOST)

AR?=$(HOST)-ar
AS?=$(HOST)-as
CC?=$(HOST)-cc

CFLAGS_DEFAULT=-O2 -g
CFLAGS_EXTRA=-ffreestanding -Wall -Wextra
CPPFLAGS_DEFAULT=
CPPFLAGS_EXTRA=-Iinclude
LDFLAGS_DEFAULT=
LDFLAGS_EXTRA=
LIBS_DEFAULT=
LIBS_EXTRA=

KERNEL_CFLAGS_DEFAULT=
KERNEL_CFLAGS_EXTRA=
KERNEL_CPPFLAGS_DEFAULT=
KERNEL_CPPFLAGS_EXTRA=-D__is_kernel
KERNEL_LDFLAGS_DEFAULT=
KERNEL_LDFLAGS_EXTRA=
KERNEL_LIBS_DEFAULT=
KERNEL_LIBS_EXTRA=

USER_CFLAGS_DEFAULT=
USER_CFLAGS_EXTRA=
USER_CPPFLAGS_DEFAULT=
USER_CPPFLAGS_EXTRA=-D__is_user
USER_LDFLAGS_DEFAULT=
USER_LDFLAGS_EXTRA=
USER_LIBS_DEFAULT=
USER_LIBS_EXTRA=

LIBC_CFLAGS_DEFAULT=
LIBC_CFLAGS_EXTRA=
LIBC_CPPFLAGS_DEFAULT=
LIBC_CPPFLAGS_EXTRA=-D__is_libc
LIBC_LDFLAGS_DEFAULT=
LIBC_LDFLAGS_EXTRA=
LIBC_LIBS_DEFAULT=
LIBC_LIBS_EXTRA=

LIBG_CFLAGS_DEFAULT=-s -g0
LIBG_CFLAGS_EXTRA=
LIBG_CPPFLAGS_DEFAULT=
LIBG_CPPFLAGS_EXTRA=-D__is_libg
LIBG_LDFLAGS_DEFAULT=
LIBG_LDFLAGS_EXTRA=
LIBG_LIBS_DEFAULT=
LIBG_LIBS_EXTRA=

LIBK_CFLAGS_DEFAULT=
LIBK_CFLAGS_EXTRA=
LIBK_CPPFLAGS_DEFAULT=
LIBK_CPPFLAGS_EXTRA=-D__is_libk
LIBK_LDFLAGS_DEFAULT=
LIBK_LDFLAGS_EXTRA=
LIBK_LIBS_DEFAULT=
LIBK_LIBS_EXTRA=

CRT0_CFLAGS_DEFAULT=
CRT0_CFLAGS_EXTRA=
CRT0_CPPFLAGS_DEFAULT=
CRT0_CPPFLAGS_EXTRA=-D__is_crt0
CRT0_LDFLAGS_DEFAULT=
CRT0_LDFLAGS_EXTRA=
CRT0_LIBS_DEFAULT=
CRT0_LIBS_EXTRA=

DESTDIR?=
PREFIX?=/usr/local
EXEC_PREFIX?=$(PREFIX)
INCLUDEDIR?=$(PREFIX)/include
LIBDIR?=$(EXEC_PREFIX)/lib

CFLAGS_DEFAULT:=$(CFLAGS_DEFAULT)
CPPFLAGS_DEFAULT:=$(CPPFLAGS_DEFAULT)
LDFLAGS_DEFAULT:=$(LDFLAGS_DEFAULT)
LIBS_DEFAULT:=$(LIBS_DEFAULT)

CFLAGS_EXTRA:=$(CFLAGS_EXTRA)
CPPFLAGS_EXTRA:=$(CPPFLAGS_EXTRA)
LDFLAGS_EXTRA:=$(LDFLAGS_EXTRA)
LIBS_EXTRA:=$(LIBS_EXTRA)

CFLAGS?=$(CFLAGS_DEFAULT)
CPPFLAGS?=$(CPPFLAGS_DEFAULT)
LDFLAGS?=$(LDFLAGS_DEFAULT)
LIBS?=$(LIBS_DEFAULT)

CFLAGS:=$(CFLAGS)
CPPFLAGS:=$(CPPFLAGS)
LDFLAGS:=$(LDFLAGS)
LIBS:=$(LIBS)

KERNEL_CFLAGS_DEFAULT:=$(CFLAGS) $(KERNEL_CFLAGS_DEFAULT)
KERNEL_CPPFLAGS_DEFAULT:=$(CPPFLAGS) $(KERNEL_CPPFLAGS_DEFAULT)
KERNEL_LDFLAGS_DEFAULT:=$(LDFLAGS) $(KERNEL_LDFLAGS_DEFAULT)
KERNEL_LIBS_DEFAULT:=$(LIBS) $(KERNEL_LIBS_DEFAULT)

KERNEL_CFLAGS_EXTRA:=$(CFLAGS_EXTRA) $(KERNEL_CFLAGS_EXTRA)
KERNEL_CPPFLAGS_EXTRA:=$(CPPFLAGS_EXTRA) $(KERNEL_CPPFLAGS_EXTRA)
KERNEL_LDFLAGS_EXTRA:=$(LDFLAGS_EXTRA) $(KERNEL_LDFLAGS_EXTRA)
KERNEL_LIBS_EXTRA:=$(LIBS_EXTRA) $(KERNEL_LIBS_EXTRA)

KERNEL_CFLAGS?=$(KERNEL_CFLAGS_DEFAULT)
KERNEL_CPPFLAGS?=$(KERNEL_CPPFLAGS_DEFAULT)
KERNEL_LDFLAGS?=$(KERNEL_LDFLAGS_DEFAULT)
KERNEL_LIBS?=$(KERNEL_LIBS_DEFAULT)

KERNEL_CFLAGS:=$(KERNEL_CFLAGS)
KERNEL_CPPFLAGS:=$(KERNEL_CPPFLAGS)
KERNEL_LDFLAGS:=$(KERNEL_LDFLAGS)
KERNEL_LIBS:=$(KERNEL_LIBS)

USER_CFLAGS_DEFAULT:=$(CFLAGS) $(USER_CFLAGS_DEFAULT)
USER_CPPFLAGS_DEFAULT:=$(CPPFLAGS) $(USER_CPPFLAGS_DEFAULT)
USER_LDFLAGS_DEFAULT:=$(LDFLAGS) $(USER_LDFLAGS_DEFAULT)
USER_LIBS_DEFAULT:=$(LIBS) $(USER_LIBS_DEFAULT)

USER_CFLAGS_EXTRA:=$(CFLAGS_EXTRA) $(USER_CFLAGS_EXTRA)
USER_CPPFLAGS_EXTRA:=$(CPPFLAGS_EXTRA) $(USER_CPPFLAGS_EXTRA)
USER_LDFLAGS_EXTRA:=$(LDFLAGS_EXTRA) $(USER_LDFLAGS_EXTRA)
USER_LIBS_EXTRA:=$(LIBS_EXTRA) $(USER_LIBS_EXTRA)

USER_CFLAGS?=$(USER_CFLAGS_DEFAULT)
USER_CPPFLAGS?=$(USER_CPPFLAGS_DEFAULT)
USER_LDFLAGS?=$(USER_LDFLAGS_DEFAULT)
USER_LIBS?=$(USER_LIBS_DEFAULT)

USER_CFLAGS:=$(USER_CFLAGS)
USER_CPPFLAGS:=$(USER_CPPFLAGS)
USER_LDFLAGS:=$(USER_LDFLAGS)
USER_LIBS:=$(USER_LIBS)

LIBC_CFLAGS_DEFAULT:=$(USER_CFLAGS) $(LIBC_CFLAGS_DEFAULT)
LIBC_CPPFLAGS_DEFAULT:=$(USER_CPPFLAGS) $(LIBC_CPPFLAGS_DEFAULT)
LIBC_LDFLAGS_DEFAULT:=$(USER_LDFLAGS) $(LIBC_LDFLAGS_DEFAULT)
LIBC_LIBS_DEFAULT:=$(USER_LIBS) $(LIBC_LIBS_DEFAULT)

LIBC_CFLAGS_EXTRA:=$(USER_CFLAGS_EXTRA) $(LIBC_CFLAGS_EXTRA)
LIBC_CPPFLAGS_EXTRA:=$(USER_CPPFLAGS_EXTRA) $(LIBC_CPPFLAGS_EXTRA)
LIBC_LDFLAGS_EXTRA:=$(USER_LDFLAGS_EXTRA) $(LIBC_LDFLAGS_EXTRA)
LIBC_LIBS_EXTRA:=$(USER_LIBS_EXTRA) $(LIBC_LIBS_EXTRA)

LIBC_CFLAGS?=$(LIBC_CFLAGS_DEFAULT)
LIBC_CPPFLAGS?=$(LIBC_CPPFLAGS_DEFAULT)
LIBC_LDFLAGS?=$(LIBC_LDFLAGS_DEFAULT)
LIBC_LIBS?=$(LIBC_LIBS_DEFAULT)

LIBC_CFLAGS:=$(LIBC_CFLAGS)
LIBC_CPPFLAGS:=$(LIBC_CPPFLAGS)
LIBC_LDFLAGS:=$(LIBC_LDFLAGS)
LIBC_LIBS:=$(LIBC_LIBS)

LIBG_CFLAGS_DEFAULT:=$(USER_CFLAGS) $(LIBG_CFLAGS_DEFAULT)
LIBG_CPPFLAGS_DEFAULT:=$(USER_CPPFLAGS) $(LIBG_CPPFLAGS_DEFAULT)
LIBG_LDFLAGS_DEFAULT:=$(USER_LDFLAGS) $(LIBG_LDFLAGS_DEFAULT)
LIBG_LIBS_DEFAULT:=$(USER_LIBS) $(LIBG_LIBS_DEFAULT)

LIBG_CFLAGS_EXTRA:=$(USER_CFLAGS_EXTRA) $(LIBG_CFLAGS_EXTRA)
LIBG_CPPFLAGS_EXTRA:=$(USER_CPPFLAGS_EXTRA) $(LIBG_CPPFLAGS_EXTRA)
LIBG_LDFLAGS_EXTRA:=$(USER_LDFLAGS_EXTRA) $(LIBG_LDFLAGS_EXTRA)
LIBG_LIBS_EXTRA:=$(USER_LIBS_EXTRA) $(LIBG_LIBS_EXTRA)

LIBG_CFLAGS?=$(LIBG_CFLAGS_DEFAULT)
LIBG_CPPFLAGS?=$(LIBG_CPPFLAGS_DEFAULT)
LIBG_LDFLAGS?=$(LIBG_LDFLAGS_DEFAULT)
LIBG_LIBS?=$(LIBG_LIBS_DEFAULT)

LIBG_CFLAGS:=$(LIBG_CFLAGS)
LIBG_CPPFLAGS:=$(LIBG_CPPFLAGS)
LIBG_LDFLAGS:=$(LIBG_LDFLAGS)
LIBG_LIBS:=$(LIBG_LIBS)

LIBK_CFLAGS_DEFAULT:=$(KERNEL_CFLAGS) $(LIBK_CFLAGS_DEFAULT)
LIBK_CPPFLAGS_DEFAULT:=$(KERNEL_CPPFLAGS) $(LIBK_CPPFLAGS_DEFAULT)
LIBK_LDFLAGS_DEFAULT:=$(KERNEL_LDFLAGS) $(LIBK_LDFLAGS_DEFAULT)
LIBK_LIBS_DEFAULT:=$(KERNEL_LIBS) $(LIBK_LIBS_DEFAULT)

LIBK_CFLAGS_EXTRA:=$(KERNEL_CFLAGS_EXTRA) $(LIBK_CFLAGS_EXTRA)
LIBK_CPPFLAGS_EXTRA:=$(KERNEL_CPPFLAGS_EXTRA) $(LIBK_CPPFLAGS_EXTRA)
LIBK_LDFLAGS_EXTRA:=$(KERNEL_LDFLAGS_EXTRA) $(LIBK_LDFLAGS_EXTRA)
LIBK_LIBS_EXTRA:=$(KERNEL_LIBS_EXTRA) $(LIBK_LIBS_EXTRA)

LIBK_CFLAGS?=$(LIBK_CFLAGS_DEFAULT)
LIBK_CPPFLAGS?=$(LIBK_CPPFLAGS_DEFAULT)
LIBK_LDFLAGS?=$(LIBK_LDFLAGS_DEFAULT)
LIBK_LIBS?=$(LIBK_LIBS_DEFAULT)

LIBK_CFLAGS:=$(LIBK_CFLAGS)
LIBK_CPPFLAGS:=$(LIBK_CPPFLAGS)
LIBK_LDFLAGS:=$(LIBK_LDFLAGS)
LIBK_LIBS:=$(LIBK_LIBS)

CRT0_CFLAGS_DEFAULT:=$(USER_CFLAGS) $(CRT0_CFLAGS_DEFAULT)
CRT0_CPPFLAGS_DEFAULT:=$(USER_CPPFLAGS) $(CRT0_CPPFLAGS_DEFAULT)
CRT0_LDFLAGS_DEFAULT:=$(USER_LDFLAGS) $(CRT0_LDFLAGS_DEFAULT)
CRT0_LIBS_DEFAULT:=$(USER_LIBS) $(CRT0_LIBS_DEFAULT)

CRT0_CFLAGS_EXTRA:=$(USER_CFLAGS_EXTRA) $(CRT0_CFLAGS_EXTRA)
CRT0_CPPFLAGS_EXTRA:=$(USER_CPPFLAGS_EXTRA) $(CRT0_CPPFLAGS_EXTRA)
CRT0_LDFLAGS_EXTRA:=$(USER_LDFLAGS_EXTRA) $(CRT0_LDFLAGS_EXTRA)
CRT0_LIBS_EXTRA:=$(USER_LIBS_EXTRA) $(CRT0_LIBS_EXTRA)

CRT0_CFLAGS?=$(CRT0_CFLAGS_DEFAULT)
CRT0_CPPFLAGS?=$(CRT0_CPPFLAGS_DEFAULT)
CRT0_LDFLAGS?=$(CRT0_LDFLAGS_DEFAULT)
CRT0_LIBS?=$(CRT0_LIBS_DEFAULT)

CRT0_CFLAGS:=$(CRT0_CFLAGS)
CRT0_CPPFLAGS:=$(CRT0_CPPFLAGS)
CRT0_LDFLAGS:=$(CRT0_LDFLAGS)
CRT0_LIBS:=$(CRT0_LIBS)

CFLAGS:=$(CFLAGS) $(CFLAGS_EXTRA)
CPPFLAGS:=$(CPPFLAGS) $(CPPFLAGS_EXTRA)
LDFLAGS:=$(LDFLAGS) $(LDFLAGS_EXTRA)
LIBS:=$(LIBS) $(LIBS_EXTRA)

KERNEL_CFLAGS:=$(KERNEL_CFLAGS) $(KERNEL_CFLAGS_EXTRA)
KERNEL_CPPFLAGS:=$(KERNEL_CPPFLAGS) $(KERNEL_CPPFLAGS_EXTRA)
KERNEL_LDFLAGS:=$(KERNEL_LDFLAGS) $(KERNEL_LDFLAGS_EXTRA)
KERNEL_LIBS:=$(KERNEL_LIBS) $(KERNEL_LIBS_EXTRA)

USER_CFLAGS:=$(USER_CFLAGS) $(USER_CFLAGS_EXTRA)
USER_CPPFLAGS:=$(USER_CPPFLAGS) $(USER_CPPFLAGS_EXTRA)
USER_LDFLAGS:=$(USER_LDFLAGS) $(USER_LDFLAGS_EXTRA)
USER_LIBS:=$(USER_LIBS) $(USER_LIBS_EXTRA)

LIBC_CFLAGS:=$(LIBC_CFLAGS) $(LIBC_CFLAGS_EXTRA)
LIBC_CPPFLAGS:=$(LIBC_CPPFLAGS) $(LIBC_CPPFLAGS_EXTRA)
LIBC_LDFLAGS:=$(LIBC_LDFLAGS) $(LIBC_LDFLAGS_EXTRA)
LIBC_LIBS:=$(LIBC_LIBS) $(LIBC_LIBS_EXTRA)

LIBG_CFLAGS:=$(LIBG_CFLAGS) $(LIBG_CFLAGS_EXTRA)
LIBG_CPPFLAGS:=$(LIBG_CPPFLAGS) $(LIBG_CPPFLAGS_EXTRA)
LIBG_LDFLAGS:=$(LIBG_LDFLAGS) $(LIBG_LDFLAGS_EXTRA)
LIBG_LIBS:=$(LIBG_LIBS) $(LIBG_LIBS_EXTRA)

LIBK_CFLAGS:=$(LIBK_CFLAGS) $(LIBK_CFLAGS_EXTRA)
LIBK_CPPFLAGS:=$(LIBK_CPPFLAGS) $(LIBK_CPPFLAGS_EXTRA)
LIBK_LDFLAGS:=$(LIBK_LDFLAGS) $(LIBK_LDFLAGS_EXTRA)
LIBK_LIBS:=$(LIBK_LIBS) $(LIBK_LIBS_EXTRA)

CRT0_CFLAGS:=$(CRT0_CFLAGS) $(CRT0_CFLAGS_EXTRA)
CRT0_CPPFLAGS:=$(CRT0_CPPFLAGS) $(CRT0_CPPFLAGS_EXTRA)
CRT0_LDFLAGS:=$(CRT0_LDFLAGS) $(CRT0_LDFLAGS_EXTRA)
CRT0_LIBS:=$(CRT0_LIBS) $(CRT0_LIBS_EXTRA)

ARCHDIR=arch/$(HOSTARCH)

include $(ARCHDIR)/$(HOSTARCH).make

CFLAGS:=$(CFLAGS) $(ARCH_CFLAGS)
CPPFLAGS:=$(CPPFLAGS) $(ARCH_CPPFLAGS)
LDFLAGS:=$(LDFLAGS) $(ARCH_LDFLAGS)
LIBS:=$(LIBS) $(ARCH_LIBS)

KERNEL_CFLAGS:=$(KERNEL_CFLAGS) $(KERNEL_ARCH_CFLAGS)
KERNEL_CPPFLAGS:=$(KERNEL_CPPFLAGS) $(KERNEL_ARCH_CPPFLAGS)
KERNEL_LDFLAGS:=$(KERNEL_LDFLAGS) $(KERNEL_ARCH_LDFLAGS)
KERNEL_LIBS:=$(KERNEL_LIBS) $(KERNEL_ARCH_LIBS)

USER_CFLAGS:=$(USER_CFLAGS) $(USER_ARCH_CFLAGS)
USER_CPPFLAGS:=$(USER_CPPFLAGS) $(USER_ARCH_CPPFLAGS)
USER_LDFLAGS:=$(USER_LDFLAGS) $(USER_ARCH_LDFLAGS)
USER_LIBS:=$(USER_LIBS) $(USER_ARCH_LIBS)

LIBC_CFLAGS:=$(LIBC_CFLAGS) $(LIBC_ARCH_CFLAGS)
LIBC_CPPFLAGS:=$(LIBC_CPPFLAGS) $(LIBC_ARCH_CPPFLAGS)
LIBC_LDFLAGS:=$(LIBC_LDFLAGS) $(LIBC_ARCH_LDFLAGS)
LIBC_LIBS:=$(LIBC_LIBS) $(LIBC_ARCH_LIBS)

LIBG_CFLAGS:=$(LIBG_CFLAGS) $(LIBG_ARCH_CFLAGS)
LIBG_CPPFLAGS:=$(LIBG_CPPFLAGS) $(LIBG_ARCH_CPPFLAGS)
LIBG_LDFLAGS:=$(LIBG_LDFLAGS) $(LIBG_ARCH_LDFLAGS)
LIBG_LIBS:=$(LIBG_LIBS) $(LIBG_ARCH_LIBS)

LIBK_CFLAGS:=$(LIBK_CFLAGS) $(LIBK_ARCH_CFLAGS)
LIBK_CPPFLAGS:=$(LIBK_CPPFLAGS) $(LIBK_ARCH_CPPFLAGS)
LIBK_LDFLAGS:=$(LIBK_LDFLAGS) $(LIBK_ARCH_LDFLAGS)
LIBK_LIBS:=$(LIBK_LIBS) $(LIBK_ARCH_LIBS)

CRT0_CFLAGS:=$(CRT0_CFLAGS) $(CRT0_ARCH_CFLAGS)
CRT0_CPPFLAGS:=$(CRT0_CPPFLAGS) $(CRT0_ARCH_CPPFLAGS)
CRT0_LDFLAGS:=$(CRT0_LDFLAGS) $(CRT0_ARCH_LDFLAGS)
CRT0_LIBS:=$(CRT0_LIBS) $(CRT0_ARCH_LIBS)

FREEOBJS=\
$(ARCH_FREEOBJS) \
stdio/printf.o \
stdio/putchar.o \
stdio/puts.o \
stdlib/abort.o \
stdlib/alloc-page.o \
stdlib/calloc.o \
stdlib/free.o \
stdlib/free-page.o \
stdlib/malloc.o \
stdlib/realloc.o \
stdlib/exit.o \
stdlib/atexit.o \
string/memcmp.o \
string/memcpy.o \
string/memmove.o \
string/memset.o \
string/strlen.o \
string/strcmp.o \
string/strcpy.o \
libc/libc.o \
libc/setup.o \
libc/teardown.o \

HOSTEDOBJS=\
$(ARCH_HOSTEDOBJS) \
libc/initialize-user-library.o \
libc/finalize-user-library.o \

LIBC_OBJS=\
$(ARCHDIR)/crti.libc.o \
$(FREEOBJS:.o=.libc.o) \
$(HOSTEDOBJS:.o=.libc.o) \
$(ARCHDIR)/crtn.libc.o \

LIBG_OBJS=\
$(ARCHDIR)/crti.libg.o \
$(FREEOBJS:.o=.libg.o) \
$(HOSTEDOBJS:.o=.libg.o) \
$(ARCHDIR)/crtn.libg.o \

LIBK_OBJS=\
$(FREEOBJS:.o=.libk.o) \
libc/initialize-kernel-library.libk.o \
libc/finalize-kernel-library.libk.o \

CRT0_OBJ=$(ARCHDIR)/crt0.crt0.o

OBJS=\
$(LIBC_OBJS) \
$(LIBG_OBJS) \
$(LIBK_OBJS) \
$(CRT0_OBJ) \

BINARIES=libc.a libg.a libk.a crt0.o

.PHONY: all clean install install-headers install-libs
.SUFFIXES: .libc.o .libg.o .libk.o .crt0.o .c .S

all: $(BINARIES)

libc.a: $(LIBC_OBJS)
	$(AR) rcs $@ $(LIBC_OBJS)

libg.a: $(LIBG_OBJS)
	$(AR) rcs $@ $(LIBG_OBJS)

libk.a: $(LIBK_OBJS)
	$(AR) rcs $@ $(LIBK_OBJS)

crt0.o: $(CRT0_OBJ)
	cp --preserve=timestamps $< $@

.c.libc.o:
	$(CC) -MD -c $< -o $@ -std=gnu11 $(LIBC_CFLAGS) $(LIBC_CPPFLAGS)

.S.libc.o:
	$(CC) -MD -c $< -o $@ $(LIBC_CFLAGS) -D__assembler $(LIBC_CPPFLAGS)

.c.libg.o:
	$(CC) -MD -c $< -o $@ -std=gnu11 $(LIBG_CFLAGS) $(LIBG_CPPFLAGS)

.S.libg.o:
	$(CC) -MD -c $< -o $@ $(LIBG_CFLAGS) -D__assembler $(LIBG_CPPFLAGS)

.c.libk.o:
	$(CC) -MD -c $< -o $@ -std=gnu11 $(LIBK_CFLAGS) $(LIBK_CPPFLAGS)

.S.libk.o:
	$(CC) -MD -c $< -o $@ $(LIBK_CFLAGS) -D__assembler $(LIBK_CPPFLAGS)

.c.crt0.o:
	$(CC) -MD -c $< -o $@ -std=gnu11 $(CRT0_CFLAGS) $(CRT0_CPPFLAGS)

.S.crt0.o:
	$(CC) -MD -c $< -o $@ $(CRT0_CFLAGS) -D__assembler $(CRT0_CPPFLAGS)

clean:
	rm -f $(BINARIES) $(OBJS) $(OBJS:.o=.d) $(ARCHDIR)/crt{begin,end}.o

install: install-headers install-libs

install-headers:
	mkdir -p $(DESTDIR)$(INCLUDEDIR)
	cp -R --preserve=timestamps include/. $(DESTDIR)$(INCLUDEDIR)/.

install-libs: $(BINARIES)
	mkdir -p $(DESTDIR)$(LIBDIR)
	cp $(BINARIES) $(DESTDIR)$(LIBDIR)

-include $(OBJS:.o=.d)
